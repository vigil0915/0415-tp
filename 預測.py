# -*- coding: utf-8 -*-
"""課本P2-47綜合範例-第一題-波士頓房價預測_修正資料來源.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1YpnGemeYBk5hafUayGOzrCdFuneJt33v
"""

# 1. 載入資料與套件
import pandas as pd
import numpy as np
from sklearn.linear_model import LinearRegression
from sklearn.model_selection import train_test_split
from sklearn.metrics import mean_absolute_error, mean_squared_error

# 從公開網址讀取資料
url = "https://raw.githubusercontent.com/selva86/datasets/master/BostonHousing.csv"
df = pd.read_csv(url)
df.head()

# X：用來預測的特徵（不包含 medv）
X = df.drop("medv", axis=1)
# y：房價
y = df["medv"]

X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=1)

model = LinearRegression() #此行在 建立一個「線性回歸模型」的空殼子，就像你先買了一台沒訓練過的 AI。

model.fit(X_train, y_train) #此行在 訓練模型：讓 model 學會「怎麼從房子的特徵（X）預測房價（y）」。

"""用白話說：
👉「拿這些訓練資料（X 與 y）去教會這個模型，讓它學會房價的計算邏輯」
學習之後，這台模型就可以幫你預測「新的房子」大約值多少錢啦!
"""

# 預測測試資料
y_pred = model.predict(X_test)

mae = mean_absolute_error(y_test, y_pred)
mse = mean_squared_error(y_test, y_pred)
rmse = np.sqrt(mse)

print(f"平均絕對誤差 MAE: {mae:.4f}")
print(f"均方誤差 MSE: {mse:.4f}")
print(f"均方根誤差 RMSE: {rmse:.4f}")

# 使用指定輸入資料
X_new = [[0.00632, 18.00, 2.310, 0, 0.5380, 6.5750, 65.20,
          4.0900, 1, 296.0, 15.30, 396.90 , 4.98]]

predicted_price = model.predict(X_new)[0]
print(f"這間房子的預測價格：約 {round(predicted_price, 4)} 千美元")